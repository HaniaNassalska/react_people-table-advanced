{"version":3,"sources":["common/PageTitle.tsx","featurs/HomePage/index.tsx","featurs/PeoplePage/PeoplePageContent/Loader/index.tsx","api.ts","featurs/PeoplePage/context/PeoplePageContext.tsx","utils/searchHelper.ts","featurs/PeoplePage/PeoplePageContent/TableHeaders/TableHeder/SearchLink.tsx","featurs/PeoplePage/PeoplePageContent/PeopleFilters/CenturyFilters/AllFilter/index.tsx","featurs/PeoplePage/PeoplePageContent/PeopleFilters/CenturyFilters/index.tsx","featurs/PeoplePage/PeoplePageContent/PeopleFilters/CenturyFilters/useCenturyFilters.tsx","featurs/PeoplePage/PeoplePageContent/PeopleFilters/ResetFilters/index.tsx","featurs/PeoplePage/PeoplePageContent/PeopleFilters/SearchInput/index.tsx","featurs/PeoplePage/PeoplePageContent/PeopleFilters/SexFilter/index.tsx","featurs/PeoplePage/PeoplePageContent/PeopleFilters/SexFilter/useSexFilter.tsx","featurs/PeoplePage/PeoplePageContent/PeopleFilters/index.tsx","featurs/PeoplePage/PeoplePageContent/OnePerson/index.tsx","featurs/PeoplePage/PeoplePageContent/OnePerson/usePerson.tsx","featurs/PeoplePage/PeoplePageContent/TableHeaders/TableHeder/index.tsx","featurs/PeoplePage/PeoplePageContent/TableHeaders/TableHeder/useTableHeader.tsx","featurs/PeoplePage/PeoplePageContent/TableHeaders/index.tsx","featurs/PeoplePage/PeoplePageContent/index.tsx","featurs/PeoplePage/PeoplePageContent/useGetDisplayPeople.tsx","featurs/PeoplePage/index.tsx","featurs/NotFoundPage/index.tsx","featurs/Navigation/index.tsx","App.tsx","index.tsx"],"names":["PageTitle","title","className","HomePage","Loader","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","then","fetch","response","json","PeoplePageContext","createContext","undefined","PeoplePageProvider","children","useState","people","setPeople","isLoading","setIsLoading","error","setError","useEffect","fetchData","data","Provider","value","usePeoplePageContext","context","useContext","Error","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","delete","Array","isArray","part","append","set","SearchLink","params","props","useSearchParams","searchParams","to","search","AllFilter","centuries","CenturyFilters","currentCenturies","getAll","getParams","century","includes","filter","c","useCenturyFilters","map","ResetFilters","sex","query","SearchInput","setSearchParams","type","placeholder","get","onChange","e","target","SexFilter","sexFilter","param","name","lowerCaseName","toLocaleLowerCase","sexOptions","useSexFilter","s","PeopleFilters","OnePerson","person","getParentSlug","parentName","parent","find","p","slug","useParams","navigate","useNavigate","classNames","onClick","url","replace","born","died","motherName","fatherName","TableHeader","sortFilter","orderFilter","isSortName","isOrder","sortIcon","useTableHeader","sort","order","TableHeaders","PeoplePageContent","visiblePeople","resultArray","sortParam","orderParam","sexParam","centuriesParam","queryParam","centuryRanges","start","end","filteredArray","length","some","centuryRange","toLowerCase","trim","a","b","localeCompare","useGetDisplayPeople","nanoid","PeoplePage","NotFoundPage","Navigation","role","isActive","path","element","App","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d10aaeee.chunk.js","sourcesContent":["type Props = {\n  title: string,\n};\n\nexport const PageTitle = ({ title }: Props) => (\n  <h1 className=\"title\">{title}</h1>\n);\n","import { PageTitle } from '../../common/PageTitle';\n\nexport const HomePage = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <PageTitle title=\"Home Page\" />\n    </div>\n\n  </main>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import {\n  createContext, useContext, useEffect, useState,\n} from 'react';\nimport { PeoplePageContextType, Props } from './types';\nimport { Person } from '../../../types';\nimport { getPeople } from '../../../api';\n\nconst PeoplePageContext\n= createContext<PeoplePageContextType | undefined>(undefined);\n\nexport const PeoplePageProvider = ({ children }: Props) => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getPeople();\n\n        setPeople(data);\n      } catch (e) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <PeoplePageContext.Provider\n      value={{\n        people,\n        isLoading,\n        error,\n      }}\n    >\n      {children}\n    </PeoplePageContext.Provider>\n  );\n};\n\nexport const usePeoplePageContext = () => {\n  const context = useContext(PeoplePageContext);\n\n  if (!context) {\n    // eslint-disable-next-line max-len\n    throw new Error('usePeoplePageContext must be used within a PeoplePageProvider');\n  }\n\n  return context;\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../../../../../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import { SearchLink } from '../../../TableHeaders/TableHeder/SearchLink';\n\nexport const AllFilter = () => (\n\n  <div className=\"level-right ml-4\">\n    <SearchLink\n      data-cy=\"centuryALL\"\n      className=\"button is-success is-outlined\"\n      params={{ centuries: null }}\n    >\n      All\n    </SearchLink>\n  </div>\n);\n","import { SearchLink } from '../../TableHeaders/TableHeder/SearchLink';\nimport { AllFilter } from './AllFilter';\nimport { useCenturyFilters } from './useCenturyFilters';\n\nexport const CenturyFilters = () => {\n  const { centuries, getParams, className } = useCenturyFilters();\n\n  return (\n    <div className=\"panel-block\">\n      <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n        <div className=\"level-left\">\n          {centuries.map(century => (\n            <SearchLink\n              key={century}\n              data-cy=\"century\"\n              className={className(century)}\n              params={{\n                centuries: getParams(century.toString()),\n              }}\n            >\n              {century}\n            </SearchLink>\n          ))}\n\n        </div>\n        <AllFilter />\n      </div>\n    </div>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\n\nexport const useCenturyFilters = () => {\n  const [searchParams] = useSearchParams();\n  const currentCenturies = searchParams.getAll('centuries');\n  const centuries = [16, 17, 18, 19, 20];\n\n  const getParams = (century: string) => {\n    return currentCenturies.includes(century)\n      ? currentCenturies.filter(c => c !== century)\n      : [century.toString(), ...searchParams.getAll('centuries')];\n  };\n\n  const className = (century: number) => {\n    if (currentCenturies.includes(century.toString())) {\n      return 'button mr-1 is-info';\n    }\n\n    return 'button mr-1';\n  };\n\n  return { centuries, getParams, className };\n};\n","import { SearchLink } from '../../TableHeaders/TableHeder/SearchLink';\n\nexport const ResetFilters = () => (\n  <div className=\"panel-block\">\n    <SearchLink\n      className=\"button is-link is-outlined is-fullwidth\"\n      params={{\n        sex: null,\n        centuries: null,\n        query: null,\n      }}\n    >\n      Reset all filters\n    </SearchLink>\n  </div>\n);\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const SearchInput = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    searchParams.set('query', `${e.target.value}`);\n    setSearchParams(searchParams);\n  };\n\n  return (\n    <div className=\"panel-block\">\n      <p className=\"control has-icons-left\">\n        <input\n          data-cy=\"NameFilter\"\n          type=\"search\"\n          className=\"input\"\n          placeholder=\"Search\"\n          value={searchParams.get('query') || ''}\n          onChange={handleInputChange}\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-search\" aria-hidden=\"true\" />\n        </span>\n      </p>\n    </div>\n  );\n};\n","import { SearchLink } from '../../TableHeaders/TableHeder/SearchLink';\nimport { useSexFilter } from './useSexFilter';\n\nexport const SexFilter = () => {\n  const { sexOptions, param, className } = useSexFilter();\n\n  return (\n    <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n\n      {sexOptions.map(s => (\n        <SearchLink\n          key={s}\n          params={{ sex: param(s) }}\n          className={className(s)}\n        >\n          {s}\n        </SearchLink>\n      ))}\n    </p>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\n\nexport const useSexFilter = () => {\n  const [searchParams] = useSearchParams();\n  const sexFilter = searchParams.get('sex');\n\n  const sexOptions = ['All', 'Male', 'Female'];\n\n  const param = (name: string) => {\n    const lowerCaseName = name.toLocaleLowerCase();\n\n    if (lowerCaseName === 'female') {\n      return 'f';\n    }\n\n    if (lowerCaseName === 'male') {\n      return 'm';\n    }\n\n    return null;\n  };\n\n  const className = (name: string): string => {\n    if (sexFilter === param(name)) {\n      return 'is-active';\n    }\n\n    return '';\n  };\n\n  return { sexOptions, param, className };\n};\n","import { CenturyFilters } from './CenturyFilters';\nimport { ResetFilters } from './ResetFilters';\nimport { SearchInput } from './SearchInput';\nimport { SexFilter } from './SexFilter';\n\nexport const PeopleFilters = () => {\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n      <SexFilter />\n      <SearchInput />\n      <CenturyFilters />\n      <ResetFilters />\n    </nav>\n  );\n};\n","import {\n  Link, useNavigate, useParams, useSearchParams,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { usePerson } from './usePerson';\nimport { Person } from '../../../../types';\nimport { usePeoplePageContext } from '../../context/PeoplePageContext';\n\ntype Props = {\n  person: Person,\n};\n\nexport const OnePerson = ({\n  person,\n}: Props) => {\n  const { people } = usePeoplePageContext();\n  const { getParentSlug } = usePerson();\n  const { slug } = useParams();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n\n  const cleaningHandler = (url: string) => {\n    navigate(url, { replace: true });\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === person.slug,\n      })}\n    >\n      <td>\n        <Link\n          className={person.sex === 'f' ? 'has-text-danger' : ''}\n          to={`/people/${person.slug}?${searchParams.toString()}`}\n          onClick={() => cleaningHandler(`/people/${person.slug}?${searchParams.toString()}`)}\n        >\n          {person.name}\n        </Link>\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{getParentSlug(people, person.motherName)}</td>\n      <td>{getParentSlug(people, person.fatherName)}</td>\n    </tr>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { Person } from '../../../../types';\n\nexport const usePerson = () => {\n  const getParentSlug = (people:Person[], parentName: string | null) => {\n    const parent = people.find(p => p.name === parentName);\n\n    if (parent) {\n      return (\n        <Link\n          to={`/people/${parent.slug}`}\n          className={parent.sex === 'f' ? 'has-text-danger' : ''}\n\n        >\n          {parent.name}\n        </Link>\n      );\n    }\n\n    return parentName || '-';\n  };\n\n  return {\n    getParentSlug,\n  };\n};\n","import { useTableHeader } from './useTableHeader';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  name: string,\n};\n\nexport const TableHeader = ({\n  name,\n}: Props) => {\n  const { isSortName, isOrder, sortIcon } = useTableHeader();\n\n  return (\n    <th>\n      <span className=\"is-flex is-flex-wrap-nowrap\">\n        {name}\n        <SearchLink\n          params={{\n            sort: isSortName(name),\n            order: isOrder(name),\n          }}\n        >\n          <span className=\"icon\">\n            <i className={sortIcon(name)} />\n          </span>\n        </SearchLink>\n      </span>\n    </th>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\n\nexport const useTableHeader = () => {\n  const [searchParams] = useSearchParams();\n\n  const sortFilter = searchParams.get('sort');\n  const orderFilter = searchParams.get('order');\n\n  const isSortName = (name: string) => {\n    const lowerCaseName = name.toLocaleLowerCase();\n\n    if ((sortFilter === null || sortFilter === lowerCaseName)\n      && orderFilter === null) {\n      return lowerCaseName;\n    }\n\n    if (sortFilter !== lowerCaseName) {\n      return lowerCaseName;\n    }\n\n    return null;\n  };\n\n  const isOrder = (name: string) => {\n    const lowerCaseName = name.toLocaleLowerCase();\n\n    if (sortFilter === null && orderFilter === null) {\n      return null;\n    }\n\n    if (sortFilter === lowerCaseName && orderFilter === null) {\n      return 'desc';\n    }\n\n    return null;\n  };\n\n  const sortIcon = (name: string) => {\n    const lowerCaseName = name.toLocaleLowerCase();\n\n    if (sortFilter === lowerCaseName && orderFilter) {\n      return 'fas fa-sort-down';\n    }\n\n    if (sortFilter === lowerCaseName) {\n      return 'fas fa-sort-up';\n    }\n\n    return 'fas fa-sort';\n  };\n\n  return { isSortName, isOrder, sortIcon };\n};\n","import { TableHeader } from './TableHeder';\n\nexport const TableHeaders = () => (\n  <thead>\n    <tr>\n      <TableHeader\n        name=\"Name\"\n      />\n      <TableHeader\n        name=\"Sex\"\n      />\n      <TableHeader\n        name=\"Born\"\n      />\n      <TableHeader\n        name=\"Died\"\n      />\n\n      <th>Mother</th>\n      <th>Father</th>\n    </tr>\n  </thead>\n\n);\n","import { nanoid } from 'nanoid';\nimport { Loader } from './Loader';\n\nimport { usePeoplePageContext } from '../context/PeoplePageContext';\nimport { PeopleFilters } from './PeopleFilters';\nimport { OnePerson } from './OnePerson';\nimport { TableHeaders } from './TableHeaders';\nimport { PageTitle } from '../../../common/PageTitle';\nimport { useGetDisplayPeople } from './useGetDisplayPeople';\n\nexport const PeoplePageContent = () => {\n  const {\n    people,\n    error,\n    isLoading,\n  }\n    = usePeoplePageContext();\n\n  const visiblePeople\n    = useGetDisplayPeople(people);\n\n  return (\n    <div data-cy=\"app\">\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <PageTitle title=\"People Page\" />\n\n          <div className=\"block\">\n            <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n              {!isLoading\n                && (\n                  <div className=\"column is-7-tablet is-narrow-desktop\">\n                    <PeopleFilters />\n                  </div>\n                )}\n              <div className=\"column\">\n\n                <div className=\"box table-container\">\n                  {isLoading && (\n                    <Loader />\n                  )}\n\n                  {error\n                    && (\n                      <p\n                        data-cy=\"peopleLoadingError\"\n                        className=\"has-text-danger\"\n                      >\n                        Something went wrong\n                      </p>\n\n                    )}\n\n                  {!isLoading\n                    && !error\n                    && (!people.length)\n                    && (\n                      <p data-cy=\"noPeopleMessage\">\n                        There are no people on the server\n                      </p>\n                    )}\n                  {!isLoading\n                    && !visiblePeople.length\n                    && !!people.length\n                    && (\n                      <p data-cy=\"noMatchingPeopleMessage\">\n                        There are no people matching the current search criteria\n                      </p>\n                    )}\n\n                  {!!people.length\n                    && !!visiblePeople.length\n                    && (\n                      <table\n                        data-cy=\"peopleTable\"\n                        className=\"table is-striped\n                  is-hoverable is-narrow is-fullwidth\"\n                      >\n                        <TableHeaders />\n                        <tbody>\n                          {visiblePeople.map(person => (\n                            <OnePerson\n                              key={nanoid()}\n                              person={person}\n                            />\n                          ))}\n                        </tbody>\n                      </table>\n                    )}\n\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { Person } from '../../../types';\n\ntype CenturyRange = {\n  start: number;\n  end: number;\n};\n\ntype CenturyRanges = {\n  [key: string]: CenturyRange;\n};\n\nexport const useGetDisplayPeople = (people: Person[]): Person[] => {\n  const [searchParams] = useSearchParams();\n  const resultArray = [...people];\n\n  const sortParam = searchParams.get('sort');\n  const orderParam = searchParams.get('order') === 'desc' ? -1 : 1;\n  const sexParam = searchParams.get('sex');\n  const centuriesParam = searchParams.getAll('centuries');\n  const queryParam = searchParams.get('query');\n\n  const centuryRanges: CenturyRanges = {\n    16: { start: 1501, end: 1600 },\n    17: { start: 1601, end: 1700 },\n    18: { start: 1701, end: 1800 },\n    19: { start: 1801, end: 1900 },\n    20: { start: 1901, end: 2000 },\n  };\n\n  const filteredArray = resultArray.filter((person) => {\n    if (sexParam && person.sex !== sexParam) {\n      return false;\n    }\n\n    if (centuriesParam.length > 0) {\n      const isPersonInSelectedCenturies = centuriesParam.some((century) => {\n        const centuryRange = centuryRanges[century];\n\n        return (\n          centuryRange\n          && ((person.born >= centuryRange.start\n            && person.born <= centuryRange.end)\n            || (person.died >= centuryRange.start\n              && person.died <= centuryRange.end))\n        );\n      });\n\n      if (!isPersonInSelectedCenturies) {\n        return false;\n      }\n    }\n\n    if (queryParam) {\n      const query = queryParam.toLowerCase().trim();\n      const isMatch\n        = person.name.toLowerCase().includes(query)\n        || person.sex.toLowerCase().includes(query)\n        || person.born.toString().includes(query)\n        || person.died.toString().includes(query)\n        || (person.motherName\n          && person.motherName.toLowerCase().includes(query))\n        || (person.fatherName\n          && person.fatherName.toLowerCase().includes(query));\n\n      if (!isMatch) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n\n  switch (sortParam) {\n    case 'name':\n      filteredArray.sort((a, b) => a.name.localeCompare(b.name) * orderParam);\n      break;\n    case 'sex':\n      filteredArray.sort((a, b) => a.sex.localeCompare(b.sex) * orderParam);\n      break;\n    case 'born':\n      filteredArray.sort((a, b) => (a.born > b.born ? 1 : -1) * orderParam);\n      break;\n    case 'died':\n      filteredArray.sort((a, b) => (a.died > b.died ? 1 : -1) * orderParam);\n      break;\n    default:\n      break;\n  }\n\n  return filteredArray;\n};\n","import { PeoplePageContent } from './PeoplePageContent';\nimport { PeoplePageProvider } from './context/PeoplePageContext';\n\nexport const PeoplePage = () => (\n  <PeoplePageProvider>\n    <PeoplePageContent />\n  </PeoplePageProvider>\n);\n","import { PageTitle } from '../../common/PageTitle';\n\nexport const NotFoundPage = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <PageTitle title=\"Page not found\" />\n    </div>\n  </main>\n);\n","import {\n  NavLink,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { HomePage } from '../HomePage';\nimport { PeoplePage } from '../PeoplePage';\nimport { NotFoundPage } from '../NotFoundPage';\n\nexport const Navigation = () => {\n  return (\n    <>\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => classNames('navbar-item',\n                { 'has-background-grey-lighter': isActive })}\n            >\n              Home\n            </NavLink>\n            <NavLink\n              to=\"/people\"\n              className={({ isActive }) => classNames('navbar-item',\n                { 'has-background-grey-lighter': isActive })}\n            >\n              People\n            </NavLink>\n\n          </div>\n        </div>\n      </nav>\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route\n          path=\"/home\"\n          element={<Navigate to=\"/\" />}\n        />\n        <Route\n          path=\"*\"\n          element={<NotFoundPage />}\n        />\n      </Routes>\n    </>\n  );\n};\n","import './App.scss';\nimport { Navigation } from './featurs/Navigation';\n\nexport const App = () => {\n  return (\n    <>\n      <div data-cy=\"app\">\n        <Navigation />\n      </div>\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}